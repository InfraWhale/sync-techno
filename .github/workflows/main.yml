name: CI/CD for sensor-simulator

on:
  push:
    branches:
      - main
    paths:
      - 'sensor-simulator/**'

jobs:
  build:
    name: Build and Deploy sensor-simulator
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js for testing
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        cd ./sensor-simulator
        npm ci

    - name: Run tests
      run: |
        cd ./sensor-simulator
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
        echo "MONGO_URI_TEST=${{ secrets.MONGO_URI_TEST }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
        npm run test -- --ci --silent=false

    - name: Build Docker Image
      run: docker build -t gyqjajang/sensor-simulator ./sensor-simulator

    - name: Push Docker Image to DockerHub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push gyqjajang/sensor-simulator

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo docker pull gyqjajang/sensor-simulator
          sudo docker stop sensor-simulator || true
          sudo docker rm sensor-simulator || true
          sudo docker run --env-file /home/ubuntu/envdir/.env -d -p 3000:3000 -e TZ=Asia/Seoul --name sensor-simulator --restart always gyqjajang/sensor-simulator
          sudo docker system prune -f --volumes
